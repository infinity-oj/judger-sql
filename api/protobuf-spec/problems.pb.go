// Code generated by protoc-gen-go. DO NOT EDIT.
// source: problems.proto

package proto

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type CreateProblemRequest struct {
	Title                string   `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	Locale               string   `protobuf:"bytes,2,opt,name=locale,proto3" json:"locale,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateProblemRequest) Reset()         { *m = CreateProblemRequest{} }
func (m *CreateProblemRequest) String() string { return proto.CompactTextString(m) }
func (*CreateProblemRequest) ProtoMessage()    {}
func (*CreateProblemRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_11c986fb2f668273, []int{0}
}

func (m *CreateProblemRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateProblemRequest.Unmarshal(m, b)
}
func (m *CreateProblemRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateProblemRequest.Marshal(b, m, deterministic)
}
func (m *CreateProblemRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateProblemRequest.Merge(m, src)
}
func (m *CreateProblemRequest) XXX_Size() int {
	return xxx_messageInfo_CreateProblemRequest.Size(m)
}
func (m *CreateProblemRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateProblemRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateProblemRequest proto.InternalMessageInfo

func (m *CreateProblemRequest) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *CreateProblemRequest) GetLocale() string {
	if m != nil {
		return m.Locale
	}
	return ""
}

type CreateProblemResponse struct {
	Status               Status   `protobuf:"varint,1,opt,name=status,proto3,enum=Status" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateProblemResponse) Reset()         { *m = CreateProblemResponse{} }
func (m *CreateProblemResponse) String() string { return proto.CompactTextString(m) }
func (*CreateProblemResponse) ProtoMessage()    {}
func (*CreateProblemResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_11c986fb2f668273, []int{1}
}

func (m *CreateProblemResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateProblemResponse.Unmarshal(m, b)
}
func (m *CreateProblemResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateProblemResponse.Marshal(b, m, deterministic)
}
func (m *CreateProblemResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateProblemResponse.Merge(m, src)
}
func (m *CreateProblemResponse) XXX_Size() int {
	return xxx_messageInfo_CreateProblemResponse.Size(m)
}
func (m *CreateProblemResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateProblemResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreateProblemResponse proto.InternalMessageInfo

func (m *CreateProblemResponse) GetStatus() Status {
	if m != nil {
		return m.Status
	}
	return Status_success
}

type FetchProblemRequest struct {
	ProblemId            string   `protobuf:"bytes,1,opt,name=problem_id,json=problemId,proto3" json:"problem_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FetchProblemRequest) Reset()         { *m = FetchProblemRequest{} }
func (m *FetchProblemRequest) String() string { return proto.CompactTextString(m) }
func (*FetchProblemRequest) ProtoMessage()    {}
func (*FetchProblemRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_11c986fb2f668273, []int{2}
}

func (m *FetchProblemRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FetchProblemRequest.Unmarshal(m, b)
}
func (m *FetchProblemRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FetchProblemRequest.Marshal(b, m, deterministic)
}
func (m *FetchProblemRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FetchProblemRequest.Merge(m, src)
}
func (m *FetchProblemRequest) XXX_Size() int {
	return xxx_messageInfo_FetchProblemRequest.Size(m)
}
func (m *FetchProblemRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_FetchProblemRequest.DiscardUnknown(m)
}

var xxx_messageInfo_FetchProblemRequest proto.InternalMessageInfo

func (m *FetchProblemRequest) GetProblemId() string {
	if m != nil {
		return m.ProblemId
	}
	return ""
}

type FetchProblemResponse struct {
	Problem              *Problem `protobuf:"bytes,1,opt,name=problem,proto3" json:"problem,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FetchProblemResponse) Reset()         { *m = FetchProblemResponse{} }
func (m *FetchProblemResponse) String() string { return proto.CompactTextString(m) }
func (*FetchProblemResponse) ProtoMessage()    {}
func (*FetchProblemResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_11c986fb2f668273, []int{3}
}

func (m *FetchProblemResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FetchProblemResponse.Unmarshal(m, b)
}
func (m *FetchProblemResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FetchProblemResponse.Marshal(b, m, deterministic)
}
func (m *FetchProblemResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FetchProblemResponse.Merge(m, src)
}
func (m *FetchProblemResponse) XXX_Size() int {
	return xxx_messageInfo_FetchProblemResponse.Size(m)
}
func (m *FetchProblemResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_FetchProblemResponse.DiscardUnknown(m)
}

var xxx_messageInfo_FetchProblemResponse proto.InternalMessageInfo

func (m *FetchProblemResponse) GetProblem() *Problem {
	if m != nil {
		return m.Problem
	}
	return nil
}

type Problem struct {
	Group                int32    `protobuf:"varint,1,opt,name=group,proto3" json:"group,omitempty"`
	Locale               string   `protobuf:"bytes,2,opt,name=locale,proto3" json:"locale,omitempty"`
	ProblemId            string   `protobuf:"bytes,3,opt,name=problem_id,json=problemId,proto3" json:"problem_id,omitempty"`
	PublicSpace          string   `protobuf:"bytes,4,opt,name=public_space,json=publicSpace,proto3" json:"public_space,omitempty"`
	PrivateSpace         string   `protobuf:"bytes,5,opt,name=private_space,json=privateSpace,proto3" json:"private_space,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Problem) Reset()         { *m = Problem{} }
func (m *Problem) String() string { return proto.CompactTextString(m) }
func (*Problem) ProtoMessage()    {}
func (*Problem) Descriptor() ([]byte, []int) {
	return fileDescriptor_11c986fb2f668273, []int{4}
}

func (m *Problem) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Problem.Unmarshal(m, b)
}
func (m *Problem) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Problem.Marshal(b, m, deterministic)
}
func (m *Problem) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Problem.Merge(m, src)
}
func (m *Problem) XXX_Size() int {
	return xxx_messageInfo_Problem.Size(m)
}
func (m *Problem) XXX_DiscardUnknown() {
	xxx_messageInfo_Problem.DiscardUnknown(m)
}

var xxx_messageInfo_Problem proto.InternalMessageInfo

func (m *Problem) GetGroup() int32 {
	if m != nil {
		return m.Group
	}
	return 0
}

func (m *Problem) GetLocale() string {
	if m != nil {
		return m.Locale
	}
	return ""
}

func (m *Problem) GetProblemId() string {
	if m != nil {
		return m.ProblemId
	}
	return ""
}

func (m *Problem) GetPublicSpace() string {
	if m != nil {
		return m.PublicSpace
	}
	return ""
}

func (m *Problem) GetPrivateSpace() string {
	if m != nil {
		return m.PrivateSpace
	}
	return ""
}

func init() {
	proto.RegisterType((*CreateProblemRequest)(nil), "CreateProblemRequest")
	proto.RegisterType((*CreateProblemResponse)(nil), "CreateProblemResponse")
	proto.RegisterType((*FetchProblemRequest)(nil), "FetchProblemRequest")
	proto.RegisterType((*FetchProblemResponse)(nil), "FetchProblemResponse")
	proto.RegisterType((*Problem)(nil), "Problem")
}

func init() { proto.RegisterFile("problems.proto", fileDescriptor_11c986fb2f668273) }

var fileDescriptor_11c986fb2f668273 = []byte{
	// 302 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x92, 0xc1, 0x4b, 0xc3, 0x30,
	0x14, 0xc6, 0xa9, 0xda, 0x75, 0x7b, 0xeb, 0x76, 0x88, 0xed, 0x28, 0x05, 0x51, 0xe3, 0xc5, 0x53,
	0x0e, 0xd5, 0x83, 0x28, 0x78, 0x50, 0x11, 0xbc, 0x49, 0x77, 0xf3, 0x32, 0xda, 0xee, 0xa1, 0x85,
	0x6a, 0x62, 0x93, 0xfa, 0x2f, 0xf8, 0x5f, 0xf8, 0xb7, 0xca, 0x92, 0x37, 0x70, 0xa5, 0x9e, 0xca,
	0xf7, 0xf5, 0x97, 0xbc, 0x2f, 0x5f, 0x02, 0x73, 0xd5, 0xca, 0xb2, 0xc1, 0x77, 0x2d, 0x54, 0x2b,
	0x8d, 0x4c, 0x43, 0x6d, 0x0a, 0xd3, 0x91, 0xe2, 0x0f, 0x10, 0xdd, 0xb7, 0x58, 0x18, 0x7c, 0x76,
	0x54, 0x8e, 0x9f, 0x1d, 0x6a, 0xc3, 0x22, 0xf0, 0x4d, 0x6d, 0x1a, 0x4c, 0xbc, 0x13, 0xef, 0x7c,
	0x92, 0x3b, 0xc1, 0x16, 0x30, 0x6a, 0x64, 0x55, 0x34, 0x98, 0xec, 0x59, 0x9b, 0x14, 0xbf, 0x82,
	0xb8, 0xb7, 0x8b, 0x56, 0xf2, 0x43, 0x23, 0x3b, 0x86, 0x91, 0x1b, 0x67, 0xf7, 0x99, 0x67, 0x81,
	0x58, 0x5a, 0x99, 0x93, 0xcd, 0x2f, 0xe1, 0xf0, 0x11, 0x4d, 0xf5, 0xd6, 0x1b, 0x7f, 0x04, 0x40,
	0xb1, 0x57, 0xf5, 0x9a, 0x32, 0x4c, 0xc8, 0x79, 0x5a, 0xf3, 0x6b, 0x88, 0x76, 0x57, 0xd1, 0x38,
	0x0e, 0x01, 0x41, 0x76, 0xcd, 0x34, 0x1b, 0x8b, 0x2d, 0xb2, 0xfd, 0xc1, 0x7f, 0x3c, 0x08, 0xc8,
	0xdc, 0x9c, 0xf2, 0xb5, 0x95, 0x9d, 0xb2, 0xb4, 0x9f, 0x3b, 0xf1, 0xdf, 0x29, 0x7b, 0xa1, 0xf6,
	0x7b, 0xa1, 0xd8, 0x29, 0x84, 0xaa, 0x2b, 0x9b, 0xba, 0x5a, 0x69, 0x55, 0x54, 0x98, 0x1c, 0x58,
	0x60, 0xea, 0xbc, 0xe5, 0xc6, 0x62, 0x67, 0x30, 0x53, 0x6d, 0xfd, 0x55, 0x18, 0x24, 0xc6, 0xb7,
	0x4c, 0x48, 0xa6, 0x85, 0xb2, 0x6f, 0x0f, 0xc6, 0x14, 0x50, 0xb3, 0x5b, 0x98, 0xed, 0x34, 0xcb,
	0x62, 0x31, 0x74, 0x5f, 0xe9, 0x42, 0x0c, 0x5f, 0xc0, 0x0d, 0x84, 0x7f, 0x9b, 0x62, 0x91, 0x18,
	0xa8, 0x3b, 0x8d, 0xc5, 0x50, 0x9d, 0x77, 0xc1, 0x8b, 0x6f, 0x5f, 0x49, 0x39, 0xb2, 0x9f, 0x8b,
	0xdf, 0x00, 0x00, 0x00, 0xff, 0xff, 0xb8, 0xc2, 0xfa, 0x14, 0x4c, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// ProblemsClient is the client API for Problems service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ProblemsClient interface {
	CreateProblem(ctx context.Context, in *CreateProblemRequest, opts ...grpc.CallOption) (*CreateProblemResponse, error)
	FetchProblem(ctx context.Context, in *FetchProblemRequest, opts ...grpc.CallOption) (*FetchProblemResponse, error)
}

type problemsClient struct {
	cc grpc.ClientConnInterface
}

func NewProblemsClient(cc grpc.ClientConnInterface) ProblemsClient {
	return &problemsClient{cc}
}

func (c *problemsClient) CreateProblem(ctx context.Context, in *CreateProblemRequest, opts ...grpc.CallOption) (*CreateProblemResponse, error) {
	out := new(CreateProblemResponse)
	err := c.cc.Invoke(ctx, "/Problems/CreateProblem", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *problemsClient) FetchProblem(ctx context.Context, in *FetchProblemRequest, opts ...grpc.CallOption) (*FetchProblemResponse, error) {
	out := new(FetchProblemResponse)
	err := c.cc.Invoke(ctx, "/Problems/FetchProblem", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ProblemsServer is the server API for Problems service.
type ProblemsServer interface {
	CreateProblem(context.Context, *CreateProblemRequest) (*CreateProblemResponse, error)
	FetchProblem(context.Context, *FetchProblemRequest) (*FetchProblemResponse, error)
}

// UnimplementedProblemsServer can be embedded to have forward compatible implementations.
type UnimplementedProblemsServer struct {
}

func (*UnimplementedProblemsServer) CreateProblem(ctx context.Context, req *CreateProblemRequest) (*CreateProblemResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateProblem not implemented")
}
func (*UnimplementedProblemsServer) FetchProblem(ctx context.Context, req *FetchProblemRequest) (*FetchProblemResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FetchProblem not implemented")
}

func RegisterProblemsServer(s *grpc.Server, srv ProblemsServer) {
	s.RegisterService(&_Problems_serviceDesc, srv)
}

func _Problems_CreateProblem_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateProblemRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProblemsServer).CreateProblem(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Problems/CreateProblem",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProblemsServer).CreateProblem(ctx, req.(*CreateProblemRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Problems_FetchProblem_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FetchProblemRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProblemsServer).FetchProblem(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Problems/FetchProblem",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProblemsServer).FetchProblem(ctx, req.(*FetchProblemRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Problems_serviceDesc = grpc.ServiceDesc{
	ServiceName: "Problems",
	HandlerType: (*ProblemsServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateProblem",
			Handler:    _Problems_CreateProblem_Handler,
		},
		{
			MethodName: "FetchProblem",
			Handler:    _Problems_FetchProblem_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "problems.proto",
}
