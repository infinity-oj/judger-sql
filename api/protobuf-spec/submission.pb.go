// Code generated by protoc-gen-go. DO NOT EDIT.
// source: submission.proto

package proto

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type CreateSubmissionRequest struct {
	SubmitterId          uint64   `protobuf:"varint,1,opt,name=submitter_id,json=submitterId,proto3" json:"submitter_id,omitempty"`
	ProblemId            string   `protobuf:"bytes,2,opt,name=problem_id,json=problemId,proto3" json:"problem_id,omitempty"`
	UserSpace            string   `protobuf:"bytes,3,opt,name=user_space,json=userSpace,proto3" json:"user_space,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateSubmissionRequest) Reset()         { *m = CreateSubmissionRequest{} }
func (m *CreateSubmissionRequest) String() string { return proto.CompactTextString(m) }
func (*CreateSubmissionRequest) ProtoMessage()    {}
func (*CreateSubmissionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_587ec94cf6d347bc, []int{0}
}

func (m *CreateSubmissionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateSubmissionRequest.Unmarshal(m, b)
}
func (m *CreateSubmissionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateSubmissionRequest.Marshal(b, m, deterministic)
}
func (m *CreateSubmissionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateSubmissionRequest.Merge(m, src)
}
func (m *CreateSubmissionRequest) XXX_Size() int {
	return xxx_messageInfo_CreateSubmissionRequest.Size(m)
}
func (m *CreateSubmissionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateSubmissionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateSubmissionRequest proto.InternalMessageInfo

func (m *CreateSubmissionRequest) GetSubmitterId() uint64 {
	if m != nil {
		return m.SubmitterId
	}
	return 0
}

func (m *CreateSubmissionRequest) GetProblemId() string {
	if m != nil {
		return m.ProblemId
	}
	return ""
}

func (m *CreateSubmissionRequest) GetUserSpace() string {
	if m != nil {
		return m.UserSpace
	}
	return ""
}

type CreateSubmissionResponse struct {
	Status               Status   `protobuf:"varint,1,opt,name=status,proto3,enum=Status" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateSubmissionResponse) Reset()         { *m = CreateSubmissionResponse{} }
func (m *CreateSubmissionResponse) String() string { return proto.CompactTextString(m) }
func (*CreateSubmissionResponse) ProtoMessage()    {}
func (*CreateSubmissionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_587ec94cf6d347bc, []int{1}
}

func (m *CreateSubmissionResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateSubmissionResponse.Unmarshal(m, b)
}
func (m *CreateSubmissionResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateSubmissionResponse.Marshal(b, m, deterministic)
}
func (m *CreateSubmissionResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateSubmissionResponse.Merge(m, src)
}
func (m *CreateSubmissionResponse) XXX_Size() int {
	return xxx_messageInfo_CreateSubmissionResponse.Size(m)
}
func (m *CreateSubmissionResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateSubmissionResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreateSubmissionResponse proto.InternalMessageInfo

func (m *CreateSubmissionResponse) GetStatus() Status {
	if m != nil {
		return m.Status
	}
	return Status_success
}

func init() {
	proto.RegisterType((*CreateSubmissionRequest)(nil), "CreateSubmissionRequest")
	proto.RegisterType((*CreateSubmissionResponse)(nil), "CreateSubmissionResponse")
}

func init() {
	proto.RegisterFile("submission.proto", fileDescriptor_587ec94cf6d347bc)
}

var fileDescriptor_587ec94cf6d347bc = []byte{
	// 204 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0x28, 0x2e, 0x4d, 0xca,
	0xcd, 0x2c, 0x2e, 0xce, 0xcc, 0xcf, 0xd3, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x97, 0xe2, 0x29, 0x2e,
	0x49, 0x2c, 0x29, 0x2d, 0x86, 0xf0, 0x94, 0xaa, 0xb8, 0xc4, 0x9d, 0x8b, 0x52, 0x13, 0x4b, 0x52,
	0x83, 0xe1, 0xea, 0x82, 0x52, 0x0b, 0x4b, 0x53, 0x8b, 0x4b, 0x84, 0x14, 0xb9, 0x78, 0xc0, 0x9a,
	0x4b, 0x4a, 0x52, 0x8b, 0xe2, 0x33, 0x53, 0x24, 0x18, 0x15, 0x18, 0x35, 0x58, 0x82, 0xb8, 0xe1,
	0x62, 0x9e, 0x29, 0x42, 0xb2, 0x5c, 0x5c, 0x05, 0x45, 0xf9, 0x49, 0x39, 0xa9, 0xb9, 0x20, 0x05,
	0x4c, 0x0a, 0x8c, 0x1a, 0x9c, 0x41, 0x9c, 0x50, 0x11, 0x88, 0x74, 0x69, 0x71, 0x6a, 0x51, 0x7c,
	0x71, 0x41, 0x62, 0x72, 0xaa, 0x04, 0x33, 0x44, 0x1a, 0x24, 0x12, 0x0c, 0x12, 0x50, 0xb2, 0xe6,
	0x92, 0xc0, 0xb4, 0xbb, 0xb8, 0x20, 0x3f, 0xaf, 0x38, 0x55, 0x48, 0x9e, 0x8b, 0x0d, 0xe2, 0x4e,
	0xb0, 0xb5, 0x7c, 0x46, 0xec, 0x7a, 0xc1, 0x60, 0x6e, 0x10, 0x54, 0xd8, 0x28, 0x8c, 0x8b, 0x1b,
	0xa1, 0xad, 0x58, 0xc8, 0x9d, 0x4b, 0x00, 0xdd, 0x2c, 0x21, 0x09, 0x3d, 0x1c, 0x5e, 0x93, 0x92,
	0xd4, 0xc3, 0x65, 0xb1, 0x13, 0x7b, 0x14, 0x2b, 0x38, 0x64, 0x92, 0xd8, 0xc0, 0x94, 0x31, 0x20,
	0x00, 0x00, 0xff, 0xff, 0x5a, 0x6f, 0x2d, 0x16, 0x42, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// SubmissionsClient is the client API for Submissions service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type SubmissionsClient interface {
	CreateSubmission(ctx context.Context, in *CreateSubmissionRequest, opts ...grpc.CallOption) (*CreateSubmissionResponse, error)
}

type submissionsClient struct {
	cc grpc.ClientConnInterface
}

func NewSubmissionsClient(cc grpc.ClientConnInterface) SubmissionsClient {
	return &submissionsClient{cc}
}

func (c *submissionsClient) CreateSubmission(ctx context.Context, in *CreateSubmissionRequest, opts ...grpc.CallOption) (*CreateSubmissionResponse, error) {
	out := new(CreateSubmissionResponse)
	err := c.cc.Invoke(ctx, "/Submissions/CreateSubmission", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// SubmissionsServer is the server API for Submissions service.
type SubmissionsServer interface {
	CreateSubmission(context.Context, *CreateSubmissionRequest) (*CreateSubmissionResponse, error)
}

// UnimplementedSubmissionsServer can be embedded to have forward compatible implementations.
type UnimplementedSubmissionsServer struct {
}

func (*UnimplementedSubmissionsServer) CreateSubmission(ctx context.Context, req *CreateSubmissionRequest) (*CreateSubmissionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateSubmission not implemented")
}

func RegisterSubmissionsServer(s *grpc.Server, srv SubmissionsServer) {
	s.RegisterService(&_Submissions_serviceDesc, srv)
}

func _Submissions_CreateSubmission_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateSubmissionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SubmissionsServer).CreateSubmission(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Submissions/CreateSubmission",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SubmissionsServer).CreateSubmission(ctx, req.(*CreateSubmissionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Submissions_serviceDesc = grpc.ServiceDesc{
	ServiceName: "Submissions",
	HandlerType: (*SubmissionsServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateSubmission",
			Handler:    _Submissions_CreateSubmission_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "submission.proto",
}
